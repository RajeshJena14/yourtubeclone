{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Pages\\\\Videoupload\\\\Videoupload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Videoupload.css';\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uploadvideo } from '../../action/video.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videoupload = ({\n  setvideouploadpage\n}) => {\n  _s();\n  const [title, settitle] = useState(\"\");\n  const [videofile, setvideofile] = useState(\"\");\n  const [progress, setprogress] = useState(0);\n  const dispatch = useDispatch();\n  const handlesetvideofile = e => {\n    setvideofile(e.target.files[0]);\n  };\n  const currentuser = useSelector(state => state.currentuserreducer);\n  const fileoption = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setprogress(percentage);\n      if (percentage === 100) {\n        setTimeout(function () {}, 3000);\n        setvideouploadpage(false);\n      }\n    }\n  };\n  const uploadvideofile = () => {\n    if (!title) {\n      alert(\"plz enter a title of the video\");\n    } else if (!videofile) {\n      alert(\"plz attach a video file\");\n    } else if (videofile.size > 1000000) {\n      alert(\"Plz attach video file less than 1 kb\");\n    } else {\n      var _currentuser$result;\n      const filedata = new FormData();\n      filedata.append(\"file\", videofile);\n      filedata.append(\"title\", title);\n      filedata.append(\"chanel\", currentuser === null || currentuser === void 0 ? void 0 : (_currentuser$result = currentuser.result) === null || _currentuser$result === void 0 ? void 0 : _currentuser$result._id);\n      filedata.append(\"uploader\", currentuser === null || currentuser === void 0 ? void 0 : currentuser.result.name);\n      dispatch(uploadvideo({\n        filedata: filedata,\n        fileoption: fileoption\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_VidUpload\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"text\",\n      value: \"X\",\n      onClick: () => setvideouploadpage(false),\n      className: \"ibtn_x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2_VidUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ibox_div_vidupload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: 30,\n          placeholder: \"Enter title of your video\",\n          className: \"ibox_vidupload\",\n          onChange: e => {\n            settitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"ibox_cidupload btn_vidUpload\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            style: {\n              fontSize: \"1rem\"\n            },\n            onChange: e => {\n              handlesetvideofile(e);\n            },\n            className: \"ibox_vidupload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ibox_div_vidupload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: () => uploadvideofile(),\n          value: \"Upload\",\n          className: \"ibox_vidupload btn_vidUpload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader ibox_div_vidupload\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: progress,\n            text: `${progress}`,\n            styles: buildStyles({\n              rotation: 0.25,\n              strokeLinecap: \"butt\",\n              textSize: \"20px\",\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(255,255,255,${progress / 100})`,\n              textColor: \"#f88\",\n              trailColor: \"#adff2f\",\n              backgroundColor: \"#3e98c7\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Videoupload, \"l1nlla+E+zYuRHwbfuaX8LghBO0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Videoupload;\nexport default Videoupload;\nvar _c;\n$RefreshReg$(_c, \"Videoupload\");","map":{"version":3,"names":["React","useState","buildStyles","CircularProgressbar","useSelector","useDispatch","uploadvideo","jsxDEV","_jsxDEV","Videoupload","setvideouploadpage","_s","title","settitle","videofile","setvideofile","progress","setprogress","dispatch","handlesetvideofile","e","target","files","currentuser","state","currentuserreducer","fileoption","onUploadProgress","progressEvent","loaded","total","percentage","Math","floor","setTimeout","uploadvideofile","alert","size","_currentuser$result","filedata","FormData","append","result","_id","name","className","children","type","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","placeholder","onChange","htmlFor","style","fontSize","text","styles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Pages/Videoupload/Videoupload.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './Videoupload.css'\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { uploadvideo } from '../../action/video.js'\r\nconst Videoupload = ({ setvideouploadpage }) => {\r\n    const [title, settitle] = useState(\"\")\r\n    const [videofile, setvideofile] = useState(\"\")\r\n    const [progress, setprogress] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const handlesetvideofile = (e) => {\r\n        setvideofile(e.target.files[0])\r\n    }\r\n    const currentuser = useSelector(state => state.currentuserreducer);\r\n    const fileoption = {\r\n        onUploadProgress: (progressEvent) => {\r\n            const { loaded, total } = progressEvent;\r\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n            setprogress(percentage)\r\n            if (percentage === 100) {\r\n                setTimeout(function () { }, 3000);\r\n                setvideouploadpage(false)\r\n            }\r\n        },\r\n    };\r\n    const uploadvideofile = () => {\r\n        if (!title) {\r\n            alert(\"plz enter a title of the video\")\r\n        } else if (!videofile) {\r\n            alert(\"plz attach a video file\");\r\n        } else if (videofile.size > 1000000) {\r\n            alert(\"Plz attach video file less than 1 kb\")\r\n        } else {\r\n            const filedata = new FormData()\r\n            filedata.append(\"file\", videofile)\r\n            filedata.append(\"title\", title)\r\n            filedata.append(\"chanel\", currentuser?.result?._id)\r\n            filedata.append(\"uploader\", currentuser?.result.name)\r\n\r\n            dispatch(uploadvideo({ filedata: filedata, fileoption: fileoption }))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container_VidUpload\">\r\n            <input type=\"submit\" name='text' value={\"X\"} onClick={() => setvideouploadpage(false)} className=\"ibtn_x\" />\r\n            <div className=\"container2_VidUpload\">\r\n                <div className=\"ibox_div_vidupload\">\r\n                    <input type=\"text\" maxLength={30} placeholder='Enter title of your video' className=\"ibox_vidupload\" onChange={(e) => {\r\n                        settitle(e.target.value);\r\n                    }} />\r\n                    <label htmlFor=\"file\" className='ibox_cidupload btn_vidUpload'>\r\n                        <input type=\"file\" name='file' style={{ fontSize: \"1rem\" }} onChange={(e) => { handlesetvideofile(e) }} className=\"ibox_vidupload\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"ibox_div_vidupload\">\r\n                    <input type=\"submit\" onClick={() => uploadvideofile()} value={\"Upload\"} className='ibox_vidupload btn_vidUpload' />\r\n                    <div className=\"loader ibox_div_vidupload\">\r\n                        <CircularProgressbar\r\n                            value={progress}\r\n                            text={`${progress}`}\r\n                            styles={buildStyles({\r\n                                rotation: 0.25,\r\n                                strokeLinecap: \"butt\",\r\n                                textSize: \"20px\",\r\n                                pathTransitionDuration: 0.5,\r\n                                pathColor: `rgba(255,255,255,${progress / 100})`,\r\n                                textColor: \"#f88\",\r\n                                trailColor: \"#adff2f\",\r\n                                backgroundColor: \"#3e98c7\",\r\n                            })}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videoupload"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}