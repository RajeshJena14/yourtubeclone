{"ast":null,"code":"import * as api from \"../Api\";\nexport const editcomment = commentdata => async dispatch => {\n  try {\n    const {\n      id,\n      commentbody\n    } = commentdata;\n    const {\n      data\n    } = await api.editcomment(id, commentbody);\n    dispatch({\n      type: \"EDIT_COMMENT\",\n      payload: data\n    });\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postcomment = commentdata => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postcomment(commentdata);\n    dispatch({\n      type: \"POST_COMMENT\",\n      payload: data\n    });\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getallcomment = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getallcomment();\n    // console.log(data)\n    dispatch({\n      type: \"FETCH_ALL_COMMENTS\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletecomment = id => async dispatch => {\n  try {\n    await api.deletecomment(id);\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","editcomment","commentdata","dispatch","id","commentbody","data","type","payload","getallcomment","error","console","log","postcomment","deletecomment"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/action/comment.js"],"sourcesContent":["import * as api from \"../Api\";\r\n\r\nexport const editcomment=(commentdata)=>async(dispatch)=>{\r\n    try {\r\n        const {id,commentbody}=commentdata\r\n        const {data}=await api.editcomment(id,commentbody)\r\n        dispatch({type:\"EDIT_COMMENT\",payload:data})\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const postcomment=(commentdata)=>async(dispatch)=>{\r\n    try {\r\n        const {data}=await api.postcomment(commentdata)\r\n        dispatch({type:\"POST_COMMENT\",payload:data})\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getallcomment=()=>async(dispatch)=>{\r\n    try {\r\n        const {data}=await api.getallcomment()\r\n        // console.log(data)\r\n        dispatch({type:\"FETCH_ALL_COMMENTS\",payload:data})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const deletecomment=(id)=>async(dispatch)=>{\r\n    try {\r\n        await api.deletecomment(id)\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,WAAW,GAAEC,WAAW,IAAG,MAAMC,QAAQ,IAAG;EACrD,IAAI;IACA,MAAM;MAACC,EAAE;MAACC;IAAW,CAAC,GAACH,WAAW;IAClC,MAAM;MAACI;IAAI,CAAC,GAAC,MAAMN,GAAG,CAACC,WAAW,CAACG,EAAE,EAACC,WAAW,CAAC;IAClDF,QAAQ,CAAC;MAACI,IAAI,EAAC,cAAc;MAACC,OAAO,EAACF;IAAI,CAAC,CAAC;IAC5CH,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAEX,WAAW,IAAG,MAAMC,QAAQ,IAAG;EACrD,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAC,MAAMN,GAAG,CAACa,WAAW,CAACX,WAAW,CAAC;IAC/CC,QAAQ,CAAC;MAACI,IAAI,EAAC,cAAc;MAACC,OAAO,EAACF;IAAI,CAAC,CAAC;IAC5CH,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMD,aAAa,GAACA,CAAA,KAAI,MAAMN,QAAQ,IAAG;EAC5C,IAAI;IACA,MAAM;MAACG;IAAI,CAAC,GAAC,MAAMN,GAAG,CAACS,aAAa,CAAC,CAAC;IACtC;IACAN,QAAQ,CAAC;MAACI,IAAI,EAAC,oBAAoB;MAACC,OAAO,EAACF;IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMI,aAAa,GAAEV,EAAE,IAAG,MAAMD,QAAQ,IAAG;EAC9C,IAAI;IACA,MAAMH,GAAG,CAACc,aAAa,CAACV,EAAE,CAAC;IAC3BD,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}