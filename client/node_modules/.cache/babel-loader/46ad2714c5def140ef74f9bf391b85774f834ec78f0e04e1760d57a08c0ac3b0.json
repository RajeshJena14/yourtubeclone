{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:2000');\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n    }).catch(er => alert(er));\n    // socket.on('room:join', (Id)=> setMe(Id));\n    socket.on('room:join', Id => console.log(Id));\n    socket.on('callUser', ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (myVideo.current && stream) {\n      myVideo.current.srcObject = stream;\n    }\n  }, [stream]);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"MS4Bkzj3i1x1KpzLXXaAXBXzToc=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","children","_s","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","catch","er","alert","on","Id","console","log","from","callerName","signal","isReceivingCall","current","srcObject","answerCall","peer","initiator","trickle","data","emit","to","callUser","id","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Context.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext()\r\n\r\nconst socket = io('http://localhost:2000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream)\r\n            })\r\n            .catch((er) => alert(er))\r\n        // socket.on('room:join', (Id)=> setMe(Id));\r\n        socket.on('room:join', (Id) => console.log(Id));\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (myVideo.current && stream) {\r\n            myVideo.current.srcObject = stream\r\n        }\r\n    }, [stream])\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, callUser, leaveCall, answerCall }} >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,MAAMS,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACsB,EAAE,EAAEC,KAAK,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMwB,OAAO,GAAGvB,MAAM,CAAC,CAAC;EACxB,MAAMwB,SAAS,GAAGxB,MAAM,CAAC,CAAC;EAC1B,MAAMyB,aAAa,GAAGzB,MAAM,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZyB,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC5DC,IAAI,CAAEC,aAAa,IAAK;MACrBhB,SAAS,CAACgB,aAAa,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,EAAE,IAAKC,KAAK,CAACD,EAAE,CAAC,CAAC;IAC7B;IACA3B,MAAM,CAAC6B,EAAE,CAAC,WAAW,EAAGC,EAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC,CAAC;IAE/C9B,MAAM,CAAC6B,EAAE,CAAC,UAAU,EAAE,CAAC;MAAEI,IAAI;MAAEvB,IAAI,EAAEwB,UAAU;MAAEC;IAAO,CAAC,KAAK;MAC1DtB,OAAO,CAAC;QAAEuB,eAAe,EAAE,IAAI;QAAEH,IAAI;QAAEvB,IAAI,EAAEwB,UAAU;QAAEC;MAAO,CAAC,CAAC;IACtE,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAENzC,SAAS,CAAC,MAAM;IACZ,IAAIsB,OAAO,CAACqB,OAAO,IAAI7B,MAAM,EAAE;MAC3BQ,OAAO,CAACqB,OAAO,CAACC,SAAS,GAAG9B,MAAM;IACtC;EACJ,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAM+B,UAAU,GAAGA,CAAA,KAAM;IACrBlC,eAAe,CAAC,IAAI,CAAC;IAErB,MAAMmC,IAAI,GAAG,IAAI5C,IAAI,CAAC;MAAE6C,SAAS,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MAAElC;IAAO,CAAC,CAAC;IAEnEgC,IAAI,CAACX,EAAE,CAAC,QAAQ,EAAGc,IAAI,IAAK;MACxB3C,MAAM,CAAC4C,IAAI,CAAC,YAAY,EAAE;QAAET,MAAM,EAAEQ,IAAI;QAAEE,EAAE,EAAEjC,IAAI,CAACqB;MAAK,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEFO,IAAI,CAACX,EAAE,CAAC,QAAQ,EAAGJ,aAAa,IAAK;MACjCR,SAAS,CAACoB,OAAO,CAACC,SAAS,GAAGb,aAAa;IAC/C,CAAC,CAAC;IAEFe,IAAI,CAACL,MAAM,CAACvB,IAAI,CAACuB,MAAM,CAAC;IAExBjB,aAAa,CAACmB,OAAO,GAAGG,IAAI;EAChC,CAAC;EAED,MAAMM,QAAQ,GAAIC,EAAE,IAAK;IACrB,MAAMP,IAAI,GAAG,IAAI5C,IAAI,CAAC;MAAE6C,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE,KAAK;MAAElC;IAAO,CAAC,CAAC;IAElEgC,IAAI,CAACX,EAAE,CAAC,QAAQ,EAAGc,IAAI,IAAK;MACxB3C,MAAM,CAAC4C,IAAI,CAAC,UAAU,EAAE;QAAEI,UAAU,EAAED,EAAE;QAAEE,UAAU,EAAEN,IAAI;QAAEV,IAAI,EAAEnB,EAAE;QAAEJ;MAAK,CAAC,CAAC;IACjF,CAAC,CAAC;IAEF8B,IAAI,CAACX,EAAE,CAAC,QAAQ,EAAGJ,aAAa,IAAK;MACjCR,SAAS,CAACoB,OAAO,CAACC,SAAS,GAAGb,aAAa;IAC/C,CAAC,CAAC;IAEFzB,MAAM,CAAC6B,EAAE,CAAC,cAAc,EAAGM,MAAM,IAAK;MAClC9B,eAAe,CAAC,IAAI,CAAC;MAErBmC,IAAI,CAACL,MAAM,CAACA,MAAM,CAAC;IACvB,CAAC,CAAC;IAEFjB,aAAa,CAACmB,OAAO,GAAGG,IAAI;EAChC,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpB3C,YAAY,CAAC,IAAI,CAAC;IAClBW,aAAa,CAACmB,OAAO,CAACc,OAAO,CAAC,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIxD,OAAA,CAACC,aAAa,CAACwD,QAAQ;IAACC,KAAK,EAAE;MAAE5C,IAAI;MAAER,YAAY;MAAEY,OAAO;MAAEC,SAAS;MAAET,MAAM;MAAEE,IAAI;MAAEC,OAAO;MAAEL,SAAS;MAAEQ,EAAE;MAAEgC,QAAQ;MAAEI,SAAS;MAAEX;IAAW,CAAE;IAAArC,QAAA,EAC5IA;EAAQ;IAAAuD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACzD,EAAA,CAlFIF,eAAe;AAAA4D,EAAA,GAAf5D,eAAe;AAoFrB,SAASA,eAAe,EAAEF,aAAa;AAAE,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}