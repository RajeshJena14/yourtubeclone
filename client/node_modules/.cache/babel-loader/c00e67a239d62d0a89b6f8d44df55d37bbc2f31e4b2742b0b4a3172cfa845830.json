{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Component\\\\Stream\\\\ScreenVideo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport './screenshare.css';\nimport { SocketContext } from '../../Context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScreenVideo = () => {\n  _s();\n  const {\n    screen,\n    myScreenVideo,\n    userScreenVideo,\n    screenAccepted,\n    screenEnded,\n    answerScreen\n  } = useContext(SocketContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [screen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        muted: true,\n        autoPlay: true,\n        ref: myScreenVideo,\n        className: \"screenVid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), screenAccepted && !screenEnded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerScreen,\n        children: \"Accept Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        muted: true,\n        autoPlay: true,\n        ref: userScreenVideo,\n        className: \"screenVid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n_s(ScreenVideo, \"YZCfv4XwT9bT/3AH0rq+Blc8kME=\");\n_c = ScreenVideo;\nexport default ScreenVideo;\nvar _c;\n$RefreshReg$(_c, \"ScreenVideo\");","map":{"version":3,"names":["React","useContext","useEffect","SocketContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ScreenVideo","_s","screen","myScreenVideo","userScreenVideo","screenAccepted","screenEnded","answerScreen","children","muted","autoPlay","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Component/Stream/ScreenVideo.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport './screenshare.css'\r\nimport { SocketContext } from '../../Context'\r\n\r\nconst ScreenVideo = () => {\r\n    const { screen, myScreenVideo, userScreenVideo, screenAccepted, screenEnded, answerScreen } = useContext(SocketContext)\r\n    return (\r\n        <>\r\n            {\r\n                screen ? (\r\n                    <div>\r\n                        <video muted autoPlay ref={myScreenVideo} className='screenVid' />\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n            {\r\n                screenAccepted && !screenEnded ? (\r\n                    <div>\r\n                        <button onClick={answerScreen}>Accept Screen</button>\r\n                        <video muted autoPlay ref={userScreenVideo} className='screenVid' />\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenVideo\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAO,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,MAAM;IAAEC,aAAa;IAAEC,eAAe;IAAEC,cAAc;IAAEC,WAAW;IAAEC;EAAa,CAAC,GAAGd,UAAU,CAACE,aAAa,CAAC;EACvH,oBACIE,OAAA,CAAAE,SAAA;IAAAS,QAAA,GAEQN,MAAM,gBACFL,OAAA;MAAAW,QAAA,eACIX,OAAA;QAAOY,KAAK;QAACC,QAAQ;QAACC,GAAG,EAAER,aAAc;QAACS,SAAS,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,gBAENnB,OAAA,CAAAE,SAAA,mBAAI,CACP,EAGDM,cAAc,IAAI,CAACC,WAAW,gBAC1BT,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAQoB,OAAO,EAAEV,YAAa;QAAAC,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDnB,OAAA;QAAOY,KAAK;QAACC,QAAQ;QAACC,GAAG,EAAEP,eAAgB;QAACQ,SAAS,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,gBAENnB,OAAA,CAAAE,SAAA,mBAAI,CACP;EAAA,eAEP,CAAC;AAEX,CAAC;AAAAE,EAAA,CAzBKD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}