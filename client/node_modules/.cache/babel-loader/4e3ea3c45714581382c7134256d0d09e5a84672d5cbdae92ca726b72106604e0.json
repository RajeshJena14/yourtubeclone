{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Component\\\\Stream\\\\MicCamera.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport './MicCamera.css';\nimport { FaMicrophone, FaMicrophoneSlash, FaVideo, FaVideoSlash } from 'react-icons/fa';\nimport { LuScreenShare, LuScreenShareOff } from 'react-icons/lu';\nimport { BsRecordFill, BsRecordCircleFill } from 'react-icons/bs';\nimport { SocketContext } from '../../Context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MicCamera = ({\n  setMute\n}) => {\n  _s();\n  const context = useContext(SocketContext);\n  const {\n    stream,\n    setStream,\n    startScreenShare,\n    stopScreenSharing,\n    callAccepted,\n    callEnded,\n    nonHostId\n  } = context;\n  const [isMuted, setIsMuted] = useState(false);\n  const [isCameraOff, setIsCameraOff] = useState(false);\n  const [isScreenShare, setIsScreenShare] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const recordings = useRef(localStorage.getItem('recordings'));\n  let mediaRecorder;\n  let data = [];\n  const RecordStart = async () => {\n    const screen = await navigator.mediaDevices.getDisplayMedia({\n      video: {\n        mediaSource: 'screen'\n      }\n    });\n    mediaRecorder = new MediaRecorder(screen);\n    mediaRecorder.ondataavailable = items => {\n      data.push(items.data);\n    };\n    mediaRecorder.start();\n    mediaRecorder.onstop = () => {\n      const blob = new Blob(data, {\n        type: 'video/webm'\n      });\n      data = [];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        localStorage.setItem('recordings', reader.result.split(',')[1]);\n      };\n      reader.readAsDataURL(blob);\n      alert('Recording Stopped');\n      setIsRecording(false);\n    };\n  };\n  const handleMic = () => {\n    setIsMuted(!isMuted);\n    setMute(!isMuted);\n  };\n  const handleCamera = () => {\n    setIsCameraOff(!isCameraOff);\n    if (!isCameraOff) {\n      const tracks = stream.getVideoTracks()[0];\n      tracks.enabled = !tracks.enabled;\n      setStream(tracks.enabled);\n    } else {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(str => {\n        setStream(str);\n      });\n    }\n  };\n  const handleScreenShare = () => {\n    setIsScreenShare(!isScreenShare);\n    if (!isScreenShare) {\n      console.log(nonHostId);\n      startScreenShare();\n    } else {\n      stopScreenSharing();\n    }\n  };\n  const handleRecord = async () => {\n    setIsRecording(!isRecording);\n    if (!isRecording) {\n      RecordStart();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"streamBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-icons\",\n      onClick: handleMic,\n      children: isMuted ? /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-icons\",\n      onClick: handleCamera,\n      children: isCameraOff ? /*#__PURE__*/_jsxDEV(FaVideoSlash, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(FaVideo, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-icons\",\n      id: \"shareScreen\",\n      onClick: handleScreenShare,\n      children: isScreenShare ? /*#__PURE__*/_jsxDEV(LuScreenShareOff, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(LuScreenShare, {\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-icons1\",\n      onClick: handleRecord,\n      children: isRecording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(BsRecordCircleFill, {\n          size: 50,\n          style: {\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(BsRecordFill, {\n        size: 50,\n        style: {\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(MicCamera, \"N+DEvyjFR3YGs5fcL5JYdIXMwIk=\");\n_c = MicCamera;\nexport default MicCamera;\nvar _c;\n$RefreshReg$(_c, \"MicCamera\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","FaMicrophone","FaMicrophoneSlash","FaVideo","FaVideoSlash","LuScreenShare","LuScreenShareOff","BsRecordFill","BsRecordCircleFill","SocketContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MicCamera","setMute","_s","context","stream","setStream","startScreenShare","stopScreenSharing","callAccepted","callEnded","nonHostId","isMuted","setIsMuted","isCameraOff","setIsCameraOff","isScreenShare","setIsScreenShare","isRecording","setIsRecording","recordings","localStorage","getItem","mediaRecorder","data","RecordStart","screen","navigator","mediaDevices","getDisplayMedia","video","mediaSource","MediaRecorder","ondataavailable","items","push","start","onstop","blob","Blob","type","reader","FileReader","onloadend","setItem","result","split","readAsDataURL","alert","handleMic","handleCamera","tracks","getVideoTracks","enabled","getUserMedia","audio","then","str","handleScreenShare","console","log","handleRecord","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","id","style","color","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Component/Stream/MicCamera.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport './MicCamera.css'\r\nimport { FaMicrophone, FaMicrophoneSlash, FaVideo, FaVideoSlash } from 'react-icons/fa'\r\nimport { LuScreenShare, LuScreenShareOff } from 'react-icons/lu'\r\nimport { BsRecordFill, BsRecordCircleFill } from 'react-icons/bs'\r\nimport { SocketContext } from '../../Context'\r\n\r\nconst MicCamera = ({setMute}) => {\r\n    const context = useContext(SocketContext)\r\n    const { stream, setStream, startScreenShare, stopScreenSharing, callAccepted, callEnded, nonHostId } = context\r\n    const [isMuted, setIsMuted] = useState(false)\r\n    const [isCameraOff, setIsCameraOff] = useState(false)\r\n    const [isScreenShare, setIsScreenShare] = useState(false)\r\n    const [isRecording, setIsRecording] = useState(false)\r\n\r\n    const recordings = useRef(localStorage.getItem('recordings'))\r\n    let mediaRecorder\r\n    let data = []\r\n    const RecordStart = async () => {\r\n        const screen = await navigator.mediaDevices.getDisplayMedia({ video: { mediaSource: 'screen', }, })\r\n        mediaRecorder = new MediaRecorder(screen)\r\n        mediaRecorder.ondataavailable = (items) => {\r\n            data.push(items.data)\r\n        }\r\n        mediaRecorder.start()\r\n        mediaRecorder.onstop = () => {\r\n            const blob = new Blob(data, { type: 'video/webm' })\r\n            data = []\r\n            const reader = new FileReader()\r\n            reader.onloadend = () => {\r\n                localStorage.setItem('recordings', reader.result.split(',')[1])\r\n            }\r\n            reader.readAsDataURL(blob)\r\n            alert('Recording Stopped')\r\n            setIsRecording(false)\r\n        }\r\n    }\r\n\r\n    const handleMic = () => {\r\n        setIsMuted(!isMuted)\r\n        setMute(!isMuted)\r\n    }\r\n    const handleCamera = () => {\r\n        setIsCameraOff(!isCameraOff)\r\n        if(!isCameraOff){\r\n            const tracks = stream.getVideoTracks()[0]\r\n            tracks.enabled = !tracks.enabled\r\n            setStream(tracks.enabled)\r\n        }\r\n        else\r\n        {\r\n            navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then((str)=>{\r\n                setStream(str)\r\n            })\r\n        }\r\n    }\r\n    const handleScreenShare = () => {\r\n        setIsScreenShare(!isScreenShare)\r\n        if (!isScreenShare) {\r\n            console.log(nonHostId)\r\n            startScreenShare()\r\n        }\r\n        else\r\n        {\r\n            stopScreenSharing()\r\n        }\r\n    }\r\n    const handleRecord = async () => {\r\n        setIsRecording(!isRecording)\r\n        if (!isRecording) {\r\n            RecordStart()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='streamBox'>\r\n            <div className=\"stream-icons\" onClick={handleMic}>\r\n                {\r\n                    isMuted ? (\r\n                        <FaMicrophoneSlash size={25} />\r\n                    ) : (\r\n                        <FaMicrophone size={25} />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"stream-icons\" onClick={handleCamera}>\r\n                {\r\n                    isCameraOff ? (\r\n                        <FaVideoSlash size={25} />\r\n                    ) : (\r\n                        <FaVideo size={25} />\r\n                    )\r\n                }\r\n            </div>\r\n            {\r\n                callAccepted && !callEnded &&\r\n                (\r\n                    <div className=\"stream-icons\" id='shareScreen' onClick={handleScreenShare}>\r\n                        {\r\n                            isScreenShare ? (\r\n                                <LuScreenShareOff size={25} />\r\n                            ) : (\r\n                                <LuScreenShare size={25} />\r\n                            )\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            <div className=\"stream-icons1\" onClick={handleRecord}>\r\n                {\r\n                    isRecording ? (\r\n                        <>\r\n                            <BsRecordCircleFill size={50} style={{ color: \"red\" }} />\r\n                        </>\r\n                    ) : (\r\n                        <BsRecordFill size={50} style={{ color: \"red\" }} />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MicCamera\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAO,iBAAiB;AACxB,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,OAAO,EAAEC,YAAY,QAAQ,gBAAgB;AACvF,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,gBAAgB;AAChE,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,gBAAgB;AACjE,SAASC,aAAa,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGpB,UAAU,CAACY,aAAa,CAAC;EACzC,MAAM;IAAES,MAAM;IAAEC,SAAS;IAAEC,gBAAgB;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGP,OAAO;EAC9G,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMiC,UAAU,GAAGlC,MAAM,CAACmC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;EAC7D,IAAIC,aAAa;EACjB,IAAIC,IAAI,GAAG,EAAE;EACb,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,eAAe,CAAC;MAAEC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAU;IAAG,CAAC,CAAC;IACnGR,aAAa,GAAG,IAAIS,aAAa,CAACN,MAAM,CAAC;IACzCH,aAAa,CAACU,eAAe,GAAIC,KAAK,IAAK;MACvCV,IAAI,CAACW,IAAI,CAACD,KAAK,CAACV,IAAI,CAAC;IACzB,CAAC;IACDD,aAAa,CAACa,KAAK,CAAC,CAAC;IACrBb,aAAa,CAACc,MAAM,GAAG,MAAM;MACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACf,IAAI,EAAE;QAAEgB,IAAI,EAAE;MAAa,CAAC,CAAC;MACnDhB,IAAI,GAAG,EAAE;MACT,MAAMiB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACrBtB,YAAY,CAACuB,OAAO,CAAC,YAAY,EAAEH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACnE,CAAC;MACDL,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC1BU,KAAK,CAAC,mBAAmB,CAAC;MAC1B7B,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC;EACL,CAAC;EAED,MAAM8B,SAAS,GAAGA,CAAA,KAAM;IACpBpC,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBV,OAAO,CAAC,CAACU,OAAO,CAAC;EACrB,CAAC;EACD,MAAMsC,YAAY,GAAGA,CAAA,KAAM;IACvBnC,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B,IAAG,CAACA,WAAW,EAAC;MACZ,MAAMqC,MAAM,GAAG9C,MAAM,CAAC+C,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;MACzCD,MAAM,CAACE,OAAO,GAAG,CAACF,MAAM,CAACE,OAAO;MAChC/C,SAAS,CAAC6C,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC,MAED;MACI1B,SAAS,CAACC,YAAY,CAAC0B,YAAY,CAAC;QAACxB,KAAK,EAAE,IAAI;QAAEyB,KAAK,EAAE;MAAI,CAAC,CAAC,CAC9DC,IAAI,CAAEC,GAAG,IAAG;QACTnD,SAAS,CAACmD,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACJ,CAAC;EACD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BzC,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAChC,IAAI,CAACA,aAAa,EAAE;MAChB2C,OAAO,CAACC,GAAG,CAACjD,SAAS,CAAC;MACtBJ,gBAAgB,CAAC,CAAC;IACtB,CAAC,MAED;MACIC,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC;EACD,MAAMqD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B1C,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B,IAAI,CAACA,WAAW,EAAE;MACdO,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAKgE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBjE,OAAA;MAAKgE,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEf,SAAU;MAAAc,QAAA,EAEzCnD,OAAO,gBACHd,OAAA,CAACT,iBAAiB;QAAC4E,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/BvE,OAAA,CAACV,YAAY;QAAC6E,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,eACNvE,OAAA;MAAKgE,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEd,YAAa;MAAAa,QAAA,EAE5CjD,WAAW,gBACPhB,OAAA,CAACP,YAAY;QAAC0E,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE1BvE,OAAA,CAACR,OAAO;QAAC2E,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,EAEF5D,YAAY,IAAI,CAACC,SAAS,iBAEtBZ,OAAA;MAAKgE,SAAS,EAAC,cAAc;MAACQ,EAAE,EAAC,aAAa;MAACN,OAAO,EAAEN,iBAAkB;MAAAK,QAAA,EAElE/C,aAAa,gBACTlB,OAAA,CAACL,gBAAgB;QAACwE,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE9BvE,OAAA,CAACN,aAAa;QAACyE,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CACR,eAELvE,OAAA;MAAKgE,SAAS,EAAC,eAAe;MAACE,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAE7C7C,WAAW,gBACPpB,OAAA,CAAAE,SAAA;QAAA+D,QAAA,eACIjE,OAAA,CAACH,kBAAkB;UAACsE,IAAI,EAAE,EAAG;UAACM,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBAC3D,CAAC,gBAEHvE,OAAA,CAACJ,YAAY;QAACuE,IAAI,EAAE,EAAG;QAACM,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACrD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAlE,EAAA,CAnHKF,SAAS;AAAAwE,EAAA,GAATxE,SAAS;AAqHf,eAAeA,SAAS;AAAA,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}