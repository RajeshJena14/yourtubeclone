{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:2000');\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [isShared, setIsShared] = useState(false);\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const screenShareVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n    }).catch(er => alert(er));\n    socket.emit('room:join');\n    socket.on('callUser', ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    return () => {\n      socket.off('callUser');\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('room:join', data => {\n      setMe(data);\n    });\n    return () => {\n      socket.off('room:join');\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (myVideo.current && stream) {\n      myVideo.current.srcObject = stream;\n    }\n  }, [stream]);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  const startScreenShare = () => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    if (isShared) {\n      stopScreenSharing();\n    }\n    navigator.mediaDevices.getDisplayMedia({\n      video: true,\n      audio: true\n    }).then(currstream => {\n      screenShareVideo.current = currstream;\n      let vidTrack = screenShareVideo.current.getVideoTracks()[0];\n      vidTrack.onended = () => {\n        stopScreenSharing();\n      };\n    });\n  };\n  const stopScreenSharing = () => {};\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      setStream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"j8wezaqfR0XNthh0+VamE05SYcw=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","children","_s","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","isShared","setIsShared","myVideo","userVideo","screenShareVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","catch","er","alert","emit","on","from","callerName","signal","isReceivingCall","off","data","current","srcObject","answerCall","peer","initiator","trickle","to","callUser","id","userToCall","signalData","leaveCall","destroy","window","location","reload","startScreenShare","stopScreenSharing","getDisplayMedia","currstream","vidTrack","getVideoTracks","onended","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Context.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext()\r\n\r\nconst socket = io('http://localhost:2000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n    const [isShared,setIsShared] = useState(false)\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const screenShareVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream)\r\n            })\r\n            .catch((er) => alert(er))\r\n        socket.emit('room:join');\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n\r\n        return () => {\r\n            socket.off('callUser')\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on('room:join', (data) => {\r\n            setMe(data)\r\n        })\r\n        return () => {\r\n            socket.off('room:join')\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        if (myVideo.current && stream) {\r\n            myVideo.current.srcObject = stream\r\n        }\r\n    }, [stream])\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n        window.location.reload();\r\n    };\r\n\r\n    const startScreenShare = () =>{\r\n        const peer = new Peer({ initiator: true, trickle: false, stream })\r\n        \r\n        if(isShared){\r\n            stopScreenSharing()\r\n        }\r\n        navigator.mediaDevices.getDisplayMedia({video:true, audio: true})\r\n        .then((currstream)=>{\r\n            screenShareVideo.current = currstream\r\n            let vidTrack = screenShareVideo.current.getVideoTracks()[0]\r\n            vidTrack.onended = () => {\r\n                stopScreenSharing()\r\n            }\r\n\r\n        })\r\n    }\r\n    const stopScreenSharing = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ call, callAccepted, myVideo, userVideo, stream, setStream, name, setName, callEnded, me, callUser, leaveCall, answerCall }} >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}