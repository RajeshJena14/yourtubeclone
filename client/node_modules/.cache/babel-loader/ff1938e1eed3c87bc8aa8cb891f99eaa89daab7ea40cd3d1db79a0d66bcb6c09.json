{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:8000');\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [state, setState] = useState(false);\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('callUser', ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (callEnded) {\n      connectionRef.current.destroy();\n      localStorage.setItem('reloadWindow', 'true');\n      console.log(\"destroyed\");\n      window.addEventListener('storage', ev => {\n        if (ev.key === 'reloadWindow' && ev.newValue === 'true') {\n          window.open('about:blank');\n        }\n      });\n    }\n    setTimeout(() => {\n      localStorage.setItem('reloadWindow', 'false');\n    }, 100);\n  }, [callEnded]);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    // window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"rsayBVCeJbMEGcR2wdfopX26zgI=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","children","_s","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","state","setState","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","destroy","localStorage","setItem","console","log","window","addEventListener","ev","key","newValue","open","setTimeout","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/Context.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n    const [state,setState] = useState(false)\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                myVideo.current.srcObject = currentStream;\r\n            });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (callEnded) {\r\n            connectionRef.current.destroy();\r\n            localStorage.setItem('reloadWindow', 'true')\r\n            console.log(\"destroyed\")\r\n            window.addEventListener('storage', (ev) => {\r\n                if (ev.key === 'reloadWindow' && ev.newValue === 'true') {\r\n                    window.open('about:blank')\r\n                }\r\n            })\r\n        }\r\n        setTimeout(() => {\r\n            localStorage.setItem('reloadWindow', 'false')\r\n        }, 100);\r\n    }, [callEnded])\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        // window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}\r\n        >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}