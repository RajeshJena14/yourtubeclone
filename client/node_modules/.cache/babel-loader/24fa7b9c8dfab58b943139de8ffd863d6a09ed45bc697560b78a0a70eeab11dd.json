{"ast":null,"code":"import * as api from \"../api\";\nexport const fetchallchannel = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchallchannel();\n    dispatch({\n      type: \"FETCH_CHANNELS\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatechanneldata = (id, updatedata) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatechanneldata(id, updatedata);\n    dispatch({\n      type: \"UPDATE_DATA\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","fetchallchannel","dispatch","data","type","payload","error","console","log","updatechanneldata","id","updatedata"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app1/src/actions/channeluser.js"],"sourcesContent":["import * as api from \"../api\"\r\n\r\nexport const fetchallchannel=()=>async(dispatch)=>\r\n{\r\n    try {\r\n        const {data} = await api.fetchallchannel()\r\n        dispatch({type:\"FETCH_CHANNELS\",payload: data})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const updatechanneldata=(id,updatedata)=>async(dispatch)=>\r\n{\r\n    try {\r\n        const {data} = await api.updatechanneldata(id,updatedata)\r\n        dispatch({type:\"UPDATE_DATA\",payload: data})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,eAAe,GAACA,CAAA,KAAI,MAAMC,QAAQ,IAC/C;EACI,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACC,eAAe,CAAC,CAAC;IAC1CC,QAAQ,CAAC;MAACE,IAAI,EAAC,gBAAgB;MAACC,OAAO,EAAEF;IAAI,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAACA,CAACC,EAAE,EAACC,UAAU,KAAG,MAAMT,QAAQ,IAC9D;EACI,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACS,iBAAiB,CAACC,EAAE,EAACC,UAAU,CAAC;IACzDT,QAAQ,CAAC;MAACE,IAAI,EAAC,aAAa;MAACC,OAAO,EAAEF;IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}