{"ast":null,"code":"import * as api from \"../Api\";\nexport const editcomment = commentdata => async dispatch => {\n  try {\n    const {\n      id,\n      commentbody\n    } = commentdata;\n    const {\n      data\n    } = await api.editcomment(id, commentbody);\n    dispatch({\n      type: \"EDIT_COMMENT\",\n      payload: data\n    });\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postcomment = commentdata => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postcomment(commentdata);\n    dispatch({\n      type: \"POST_COMMENT\",\n      payload: data\n    });\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getallcomment = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getallcomment();\n    dispatch({\n      type: \"FETCH_ALL_COMMENTS\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletecomment = id => async dispatch => {\n  try {\n    await api.deletecomment(id);\n    dispatch(getallcomment());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","editcomment","commentdata","dispatch","id","commentbody","data","type","payload","getallcomment","error","console","log","postcomment","deletecomment"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/action/comment.js"],"sourcesContent":["import * as api from \"../Api\"\r\n\r\nexport const editcomment = (commentdata) => async (dispatch) => {\r\n    try {\r\n        const { id, commentbody } = commentdata\r\n        const { data } = await api.editcomment(id, commentbody)\r\n        dispatch({ type: \"EDIT_COMMENT\", payload: data })\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const postcomment = (commentdata) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.postcomment(commentdata)\r\n        dispatch({ type: \"POST_COMMENT\", payload: data })\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getallcomment = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getallcomment()\r\n        dispatch({ type: \"FETCH_ALL_COMMENTS\", payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const deletecomment = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletecomment(id)\r\n        dispatch(getallcomment())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,WAAW,GAAIC,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACA,MAAM;MAAEC,EAAE;MAAEC;IAAY,CAAC,GAAGH,WAAW;IACvC,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACC,WAAW,CAACG,EAAE,EAAEC,WAAW,CAAC;IACvDF,QAAQ,CAAC;MAAEI,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;IACjDH,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAIX,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACa,WAAW,CAACX,WAAW,CAAC;IACnDC,QAAQ,CAAC;MAAEI,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;IACjDH,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMD,aAAa,GAAGA,CAAA,KAAM,MAAON,QAAQ,IAAK;EACnD,IAAI;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACS,aAAa,CAAC,CAAC;IAC1CN,QAAQ,CAAC;MAAEI,IAAI,EAAE,oBAAoB;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC3D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIV,EAAE,IAAK,MAAOD,QAAQ,IAAK;EACrD,IAAI;IACA,MAAMH,GAAG,CAACc,aAAa,CAACV,EAAE,CAAC;IAC3BD,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}