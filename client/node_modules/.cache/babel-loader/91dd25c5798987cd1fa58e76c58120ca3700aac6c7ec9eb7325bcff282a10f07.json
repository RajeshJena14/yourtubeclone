{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END (LIT)\\\\NULLCLASS_COURSE\\\\app2\\\\client\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { ContextProvider } from './Context';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose } from 'redux';\nimport { legacy_createStore as createstore } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport Reducers from './Reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [renderContext, setRenderContext] = useState(false);\nconst store = createstore(Reducers, compose(applyMiddleware(thunk)));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"283099722549-t879t1s9p1rlmebeee4o5m39utecjdv8.apps.googleusercontent.com\",\n    children: renderContext ? /*#__PURE__*/_jsxDEV(ContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","useState","ReactDOM","App","ContextProvider","reportWebVitals","Provider","applyMiddleware","compose","legacy_createStore","createstore","thunk","GoogleOAuthProvider","Reducers","jsxDEV","_jsxDEV","renderContext","setRenderContext","store","root","createRoot","document","getElementById","render","children","clientId","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/FRONT-END (LIT)/NULLCLASS_COURSE/app2/client/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ContextProvider } from './Context';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, compose } from 'redux';\r\nimport { legacy_createStore as createstore } from \"redux\"\r\nimport { thunk } from \"redux-thunk\"\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport Reducers from './Reducers';\r\nconst [renderContext, setRenderContext] = useState(false)\r\nconst store = createstore(Reducers, compose(applyMiddleware(thunk)));\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n\r\n  <Provider store={store}>\r\n    <GoogleOAuthProvider clientId=\"283099722549-t879t1s9p1rlmebeee4o5m39utecjdv8.apps.googleusercontent.com\">\r\n      {/* <React.StrictMode> */}\r\n\r\n      {\r\n        renderContext ? (\r\n          <ContextProvider>\r\n            <App />\r\n          </ContextProvider>\r\n        ) : (\r\n          <App />\r\n        )\r\n        }\r\n      {/* </React.StrictMode> */}\r\n    </GoogleOAuthProvider>\r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;AACzD,MAAMiB,KAAK,GAAGR,WAAW,CAACG,QAAQ,EAAEL,OAAO,CAACD,eAAe,CAACI,KAAK,CAAC,CAAC,CAAC;AACpE,MAAMQ,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAETR,OAAA,CAACT,QAAQ;EAACY,KAAK,EAAEA,KAAM;EAAAM,QAAA,eACrBT,OAAA,CAACH,mBAAmB;IAACa,QAAQ,EAAC,0EAA0E;IAAAD,QAAA,EAIpGR,aAAa,gBACXD,OAAA,CAACX,eAAe;MAAAoB,QAAA,eACdT,OAAA,CAACZ,GAAG;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,gBAElBd,OAAA,CAACZ,GAAG;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGgB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACd,CACZ,CAAC;;AAED;AACA;AACA;AACAxB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}